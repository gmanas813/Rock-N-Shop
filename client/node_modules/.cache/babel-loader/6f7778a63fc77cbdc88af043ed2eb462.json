{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Manas\\\\Desktop\\\\Btech\\\\web pr\\\\shopnrock\\\\src\\\\App.js\";\nimport React from 'react';\nimport { createStructuredSelector } from 'reselect';\nimport { selectCurrentUser } from './Redux/UserReducer/user.selector';\nimport './App.css';\nimport { Route, Redirect } from 'react-router-dom';\nimport { Homepage } from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop-page/shoppage.component';\nimport Header from './components/Header/header.component';\nimport SignIn from './components/SignIn/signin.component';\nimport { auth } from './FireBase/firebase.utils';\nimport { createProfile } from './FireBase/firebase.utils';\nimport LogIn from './pages/LogIn/login.component';\nimport { setCurrentUser } from './Redux/UserReducer/user.actions';\nimport { connect } from 'react-redux';\nimport Checkout from './pages/Checkout/checkout.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.unsubscribeFromAuth = null;\n  }\n\n  componentDidMount() {\n    const {\n      setCurrentUser\n    } = this.props;\n    this.unsubscribeFromAuth = auth.onAuthStateChanged(async userAuth => {\n      if (userAuth) {\n        console.log(userAuth);\n        const userRef = await createProfile(userAuth);\n        userRef.onSnapshot(snap => {\n          setCurrentUser({\n            id: snap.id,\n            ...snap.data()\n          });\n        });\n      }\n\n      setCurrentUser(userAuth);\n    });\n  }\n\n  componentWillUnmount() {\n    this.unsubscribeFromAuth();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/\",\n        component: Homepage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/shop\",\n        component: ShopPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/checkout\",\n        component: Checkout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: \"/signin\",\n        render: () => this.props.currentUser ? /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }, this) : /*#__PURE__*/_jsxDEV(LogIn, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapToStateProps = createStructuredSelector({\n  currentUser: selectCurrentUser\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser: user => dispatch(setCurrentUser(user))\n});\n\nexport default connect(mapToStateProps, mapDispatchToProps)(App);","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/src/App.js"],"names":["React","createStructuredSelector","selectCurrentUser","Route","Redirect","Homepage","ShopPage","Header","SignIn","auth","createProfile","LogIn","setCurrentUser","connect","Checkout","App","Component","constructor","unsubscribeFromAuth","componentDidMount","props","onAuthStateChanged","userAuth","console","log","userRef","onSnapshot","snap","id","data","componentWillUnmount","render","currentUser","mapToStateProps","mapDispatchToProps","dispatch","user"],"mappings":"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","sourcesContent":["import React from 'react'\nimport {createStructuredSelector} from 'reselect';\nimport {selectCurrentUser} from './Redux/UserReducer/user.selector';\nimport './App.css';\nimport {Route,Redirect} from 'react-router-dom';\nimport { Homepage } from './pages/homepage/homepage.component';\nimport ShopPage from './pages/shop-page/shoppage.component';\nimport Header from './components/Header/header.component';\nimport SignIn from './components/SignIn/signin.component';\nimport {auth} from './FireBase/firebase.utils';\nimport {createProfile} from './FireBase/firebase.utils';\nimport LogIn from './pages/LogIn/login.component';\nimport {setCurrentUser} from './Redux/UserReducer/user.actions';\nimport {connect} from 'react-redux';\nimport Checkout from './pages/Checkout/checkout.component';\nclass App extends React.Component{\n  constructor(){\n    super();\n  \n  }\n unsubscribeFromAuth = null;\n\n  componentDidMount(){\n    const {setCurrentUser} = this.props;\n    this.unsubscribeFromAuth=auth.onAuthStateChanged(async userAuth => {\n      if(userAuth){\n        console.log(userAuth);\n        const userRef= await createProfile(userAuth);\n        userRef.onSnapshot(snap => {\n          setCurrentUser({\n            id:snap.id,\n            ...snap.data()\n          })\n        })\n      }\n          setCurrentUser(userAuth);\n      \n    })\n  }\n\n  componentWillUnmount(){\n    this.unsubscribeFromAuth();\n  }\n\n  render(){\n    return (\n      <div className=\"App\">\n        <Header></Header>\n        <Route exact={true} path='/' component={Homepage}></Route>\n        <Route exact path='/shop' component={ShopPage} />\n        <Route exact path='/checkout' component={Checkout}></Route>\n        <Route exact path='/signin' render={()=> this.props.currentUser?\n      ( <Redirect to='/'></Redirect> ) : <LogIn></LogIn>  \n      } />\n        \n      </div>\n    );\n  }\n}\nconst mapToStateProps =  createStructuredSelector({\n  currentUser:selectCurrentUser\n});\nconst mapDispatchToProps = dispatch => ({\n  setCurrentUser:user => dispatch(\n    setCurrentUser(user)\n  )\n});\nexport default connect(mapToStateProps,mapDispatchToProps)(App);\n"]},"metadata":{},"sourceType":"module"}