{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst shopSelector = state => state.shop;\n\nexport const selectCollections = createSelector([shopSelector], shop => shop.collections);\nexport const selectCollectionsForPreview = createSelector([selectCollections], collections => collections ? Object.keys(collections).map(key => collections[key]) : []);\nexport const selectColl = collurl => createSelector([selectCollections], collections => collections ? collections[collurl] : []);\nexport const selectCollFetch = createSelector([shopSelector], shop => shop.isFetch);\nexport const selectCollLoaded = createSelector([shopSelector], shop => !!shop.collections);","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/client/src/Redux/Shop/shop.selector.js"],"names":["createSelector","shopSelector","state","shop","selectCollections","collections","selectCollectionsForPreview","Object","keys","map","key","selectColl","collurl","selectCollFetch","isFetch","selectCollLoaded"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,YAAY,GAAEC,KAAK,IAAGA,KAAK,CAACC,IAAlC;;AAGA,OAAO,MAAMC,iBAAiB,GAAGJ,cAAc,CAC3C,CAACC,YAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,WAF8B,CAAxC;AAKP,OAAO,MAAMC,2BAA2B,GAAGN,cAAc,CACrD,CAACI,iBAAD,CADqD,EAErDC,WAAW,IAAIA,WAAW,GAAGE,MAAM,CAACC,IAAP,CAAYH,WAAZ,EAAyBI,GAAzB,CAA6BC,GAAG,IAAIL,WAAW,CAACK,GAAD,CAA/C,CAAH,GAA2D,EAFhC,CAAlD;AAKP,OAAO,MAAMC,UAAU,GAAGC,OAAO,IAAIZ,cAAc,CAC/C,CAACI,iBAAD,CAD+C,EAE/CC,WAAW,IAAIA,WAAW,GAAGA,WAAW,CAACO,OAAD,CAAd,GAA0B,EAFL,CAA5C;AAKP,OAAO,MAAMC,eAAe,GAAGb,cAAc,CACzC,CAACC,YAAD,CADyC,EAEzCE,IAAI,IAAIA,IAAI,CAACW,OAF4B,CAAtC;AAKP,OAAO,MAAMC,gBAAgB,GAAGf,cAAc,CAC1C,CAACC,YAAD,CAD0C,EAE1CE,IAAI,IAAI,CAAC,CAACA,IAAI,CAACE,WAF2B,CAAvC","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst shopSelector= state=> state.shop;\r\n\r\n\r\nexport const selectCollections = createSelector(\r\n    [shopSelector],\r\n    shop => shop.collections\r\n);\r\n\r\nexport const selectCollectionsForPreview = createSelector(\r\n    [selectCollections],\r\n    collections => collections ? Object.keys(collections).map(key => collections[key]) : []\r\n);\r\n\r\nexport const selectColl = collurl => createSelector(\r\n    [selectCollections],\r\n    collections => collections ? collections[collurl] : []\r\n);\r\n\r\nexport const selectCollFetch = createSelector(\r\n    [shopSelector],\r\n    shop => shop.isFetch\r\n);\r\n\r\nexport const selectCollLoaded = createSelector(\r\n    [shopSelector],\r\n    shop => !!shop.collections\r\n);"]},"metadata":{},"sourceType":"module"}