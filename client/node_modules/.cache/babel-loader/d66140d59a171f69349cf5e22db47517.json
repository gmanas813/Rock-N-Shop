{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollFail, fetchCollSuccess } from './shop.actions';\nimport { firestore, CollectionSnapToMap } from '../../FireBase/firebase.utils';\nexport function* fetchCollAsync() {\n  try {\n    const collRef = firestore.collection('collections');\n    const snap = yield collRef.get();\n    const CollMap = yield call(CollectionSnapToMap, snap);\n    yield put(fetchCollSuccess(CollMap));\n  } catch (error) {\n    yield put(fetchCollFail(error.message));\n  }\n}\nexport function* fetchCollStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollAsync);\n}","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/client/src/Redux/Shop/shop.saga.js"],"names":["takeLatest","call","put","ShopActionTypes","fetchCollFail","fetchCollSuccess","firestore","CollectionSnapToMap","fetchCollAsync","collRef","collection","snap","get","CollMap","error","message","fetchCollStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAsBC,gBAAtB,QAA6C,gBAA7C;AACA,SAAQC,SAAR,EAAkBC,mBAAlB,QAA4C,+BAA5C;AACA,OAAO,UAAUC,cAAV,GAA4B;AAC/B,MAAG;AACC,UAAMC,OAAO,GAAGH,SAAS,CAACI,UAAV,CAAqB,aAArB,CAAhB;AACA,UAAMC,IAAI,GAAG,MAAMF,OAAO,CAACG,GAAR,EAAnB;AACA,UAAMC,OAAO,GAAG,MAAMZ,IAAI,CAACM,mBAAD,EAAqBI,IAArB,CAA1B;AACA,UAAMT,GAAG,CAACG,gBAAgB,CAACQ,OAAD,CAAjB,CAAT;AACH,GALD,CAMA,OAAMC,KAAN,EAAY;AACR,UAAMZ,GAAG,CAACE,aAAa,CAACU,KAAK,CAACC,OAAP,CAAd,CAAT;AACH;AACJ;AAED,OAAO,UAAUC,cAAV,GAA0B;AAC7B,QAAMhB,UAAU,CAACG,eAAe,CAACc,uBAAjB,EAAyCT,cAAzC,CAAhB;AACH","sourcesContent":["import {takeLatest,call,put} from 'redux-saga/effects';\r\nimport ShopActionTypes from './shop.types';\r\nimport {fetchCollFail,fetchCollSuccess} from './shop.actions';\r\nimport {firestore,CollectionSnapToMap} from '../../FireBase/firebase.utils';\r\nexport function* fetchCollAsync () {\r\n    try{\r\n        const collRef = firestore.collection('collections');\r\n        const snap = yield collRef.get();\r\n        const CollMap = yield call(CollectionSnapToMap,snap);\r\n        yield put(fetchCollSuccess(CollMap));\r\n    }\r\n    catch(error){\r\n        yield put(fetchCollFail(error.message));\r\n    }\r\n}\r\n\r\nexport function* fetchCollStart(){\r\n    yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollAsync);\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}