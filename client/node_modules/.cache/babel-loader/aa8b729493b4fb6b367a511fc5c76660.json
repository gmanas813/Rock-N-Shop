{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Manas\\\\Desktop\\\\Btech\\\\web pr\\\\shopnrock\\\\src\\\\pages\\\\shop-page\\\\shoppage.component.jsx\";\nimport React from 'react';\nimport CollectionOverview from '../../components/CollectionOverview/collectionoverview.component';\nimport { Route } from 'react-router-dom';\nimport CollectionPage from '../Collections/collection.component';\nimport { firestore, CollectionSnapToMap } from '../../FireBase/firebase.utils';\nimport { connect } from 'react-redux';\nimport { updateCollections } from '../../Redux/Shop/shop.actions';\nimport withLoader from '../../components/Loader/withloader.component';\nconst CollectionOverviewSpinner = withLoader(CollectionOverview);\n_c = CollectionOverviewSpinner;\nconst CollectionPageSpinner = withLoader(CollectionPage);\n_c2 = CollectionPageSpinner;\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribefromsnap = null;\n    this.state = {\n      loading: true\n    };\n  }\n\n  componentDidMount() {\n    const {\n      updateCollections\n    } = this.props;\n    const collRef = firestore.collection('collections');\n    collRef.onSnapshot(async snap => {\n      const CollMap = CollectionSnapToMap(snap);\n      updateCollections(CollMap);\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const {\n      loading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"shop-page\",\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${match.path}`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionOverviewSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 70\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${match.path}/:collId`,\n        render: props => /*#__PURE__*/_jsxDEV(CollectionPageSpinner, {\n          isLoading: loading,\n          ...props\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 73\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionMap => dispatch(updateCollections(collectionMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CollectionOverviewSpinner\");\n$RefreshReg$(_c2, \"CollectionPageSpinner\");","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/src/pages/shop-page/shoppage.component.jsx"],"names":["React","CollectionOverview","Route","CollectionPage","firestore","CollectionSnapToMap","connect","updateCollections","withLoader","CollectionOverviewSpinner","CollectionPageSpinner","ShopPage","Component","unsubscribefromsnap","state","loading","componentDidMount","props","collRef","collection","onSnapshot","snap","CollMap","setState","render","match","path","mapDispatchToProps","dispatch","collectionMap"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,kBAAP,MAA+B,kEAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,SAAQC,SAAR,EAAkBC,mBAAlB,QAA4C,+BAA5C;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AACA,OAAOC,UAAP,MAAuB,8CAAvB;AAEA,MAAMC,yBAAyB,GAAGD,UAAU,CAACP,kBAAD,CAA5C;KAAMQ,yB;AACN,MAAMC,qBAAqB,GAAGF,UAAU,CAACL,cAAD,CAAxC;MAAMO,qB;;AAGN,MAAMC,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACpCC,mBADoC,GACd,IADc;AAAA,SAEpCC,KAFoC,GAE9B;AACJC,MAAAA,OAAO,EAAC;AADJ,KAF8B;AAAA;;AAKpCC,EAAAA,iBAAiB,GAAE;AACjB,UAAM;AAACT,MAAAA;AAAD,QAAoB,KAAKU,KAA/B;AACA,UAAMC,OAAO,GAAGd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAAhB;AACAD,IAAAA,OAAO,CAACE,UAAR,CAAmB,MAAMC,IAAN,IAAc;AAC/B,YAAMC,OAAO,GAAGjB,mBAAmB,CAACgB,IAAD,CAAnC;AACAd,MAAAA,iBAAiB,CAACe,OAAD,CAAjB;AACA,WAAKC,QAAL,CAAc;AAACR,QAAAA,OAAO,EAAC;AAAT,OAAd;AACD,KAJD;AAKD;;AACES,EAAAA,MAAM,GAAE;AACN,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKR,KAAnB;AACA,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,EAAG,GAAEW,KAAK,CAACC,IAAK,EAAjC;AAAoC,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,yBAAD;AAA2B,UAAA,SAAS,EAAEF,OAAtC;AAAA,aAAmDE;AAAnD;AAAA;AAAA;AAAA;AAAA;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD;AAAQ,QAAA,IAAI,EAAG,GAAEQ,KAAK,CAACC,IAAK,UAA5B;AAAuC,QAAA,MAAM,EAAGT,KAAD,iBAAW,QAAC,qBAAD;AAAuB,UAAA,SAAS,EAAEF,OAAlC;AAAA,aAA+CE;AAA/C;AAAA;AAAA;AAAA;AAAA;AAA1D;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMC;;AAvB8B;;AA0BvC,MAAMU,kBAAkB,GAAGC,QAAQ,KAAK;AACtCrB,EAAAA,iBAAiB,EAAGsB,aAAa,IAAID,QAAQ,CAACrB,iBAAiB,CAACsB,aAAD,CAAlB;AADP,CAAL,CAAnC;;AAIA,eAAevB,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAiChB,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport CollectionOverview from '../../components/CollectionOverview/collectionoverview.component';\r\nimport {Route} from 'react-router-dom';\r\nimport CollectionPage from '../Collections/collection.component';\r\nimport {firestore,CollectionSnapToMap} from '../../FireBase/firebase.utils';\r\nimport {connect} from 'react-redux';\r\nimport {updateCollections} from '../../Redux/Shop/shop.actions';\r\nimport withLoader from '../../components/Loader/withloader.component';\r\n\r\nconst CollectionOverviewSpinner = withLoader(CollectionOverview);\r\nconst CollectionPageSpinner = withLoader(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component {\r\n   unsubscribefromsnap = null;\r\n   state={\r\n     loading:true\r\n   };\r\n   componentDidMount(){\r\n     const {updateCollections}=this.props;\r\n     const collRef = firestore.collection('collections');\r\n     collRef.onSnapshot(async snap => {\r\n       const CollMap = CollectionSnapToMap(snap);\r\n       updateCollections(CollMap);\r\n       this.setState({loading:false});\r\n     })\r\n   }\r\n      render(){\r\n        const {match}=this.props;\r\n        const {loading}=this.state;\r\n        return (\r\n            <div className=\"shop-page\">\r\n              <Route exact path={`${match.path}`} render={(props) => <CollectionOverviewSpinner isLoading={loading} {...props} ></CollectionOverviewSpinner>}></Route>\r\n              <Route  path={`${match.path}/:collId`} render={(props) => <CollectionPageSpinner isLoading={loading} {...props}></CollectionPageSpinner>}></Route>\r\n            </div>\r\n        );\r\n        }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  updateCollections : collectionMap => dispatch(updateCollections(collectionMap))\r\n});\r\n\r\nexport default connect(null,mapDispatchToProps)(ShopPage);\r\n\r\n"]},"metadata":{},"sourceType":"module"}