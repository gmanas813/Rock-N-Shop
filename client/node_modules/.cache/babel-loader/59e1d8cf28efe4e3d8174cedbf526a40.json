{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/firestore\";\nconst config = {\n  apiKey: \"AIzaSyCE8Gaa6xumGbLR-eC3Yk2DSj83AlqNx9w\",\n  authDomain: \"shopnrock-1ad67.firebaseapp.com\",\n  projectId: \"shopnrock-1ad67\",\n  storageBucket: \"shopnrock-1ad67.appspot.com\",\n  messagingSenderId: \"381750833564\",\n  appId: \"1:381750833564:web:f46329eb77f1c27b211859\",\n  measurementId: \"G-MQN0NFNZCZ\"\n};\nfirebase.initializeApp(config);\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const provider = new firebase.auth.GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithG = () => auth.signInWithPopup(provider);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const createProfile = async (userauth, AddData) => {\n  if (!userauth) return;\n  const userRef = firestore.doc(`users/${userauth.uid}`);\n  const snap = await userRef.get();\n\n  if (!snap.exists) {\n    const {\n      displayName,\n      email\n    } = userauth;\n\n    try {\n      await userRef.set({\n        displayName,\n        email,\n        ...AddData\n      });\n    } catch (error) {\n      alert(\"Sorry\");\n    }\n  }\n\n  return userRef;\n};\nexport const addCollectionsAndDocs = async (collName, objectToAdd) => {\n  const collRef = firestore.collection(collName);\n  const batch = firestore.batch();\n  objectToAdd.forEach(obj => {\n    const newDocRef = collRef.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const CollectionSnapToMap = collections => {\n  const transformedColl = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedColl.reduce((acc, coll) => {\n    acc[coll.title.toLowerCase()] = coll;\n    return acc;\n  }, {});\n};\n_c = CollectionSnapToMap;\nexport default firebase;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionSnapToMap\");","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/src/FireBase/firebase.utils.js"],"names":["firebase","config","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","auth","firestore","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithG","signInWithPopup","getCurrentUser","Promise","resolve","reject","unsubscribe","onAuthStateChanged","userAuth","createProfile","userauth","AddData","userRef","doc","uid","snap","get","exists","displayName","email","set","error","alert","addCollectionsAndDocs","collName","objectToAdd","collRef","collection","batch","forEach","obj","newDocRef","commit","CollectionSnapToMap","collections","transformedColl","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","acc","coll"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nconst config = {\r\n    apiKey: \"AIzaSyCE8Gaa6xumGbLR-eC3Yk2DSj83AlqNx9w\",\r\n    authDomain: \"shopnrock-1ad67.firebaseapp.com\",\r\n    projectId: \"shopnrock-1ad67\",\r\n    storageBucket: \"shopnrock-1ad67.appspot.com\",\r\n    messagingSenderId: \"381750833564\",\r\n    appId: \"1:381750833564:web:f46329eb77f1c27b211859\",\r\n    measurementId: \"G-MQN0NFNZCZ\"\r\n};\r\nfirebase.initializeApp(config);\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const provider=new firebase.auth.GoogleAuthProvider();\r\nprovider.setCustomParameters({prompt:'select_account'});\r\nexport const signInWithG = () => auth.signInWithPopup(provider);\r\n\r\nexport const getCurrentUser = () => {\r\n    return new Promise((resolve,reject)=>{\r\n        const unsubscribe = auth.onAuthStateChanged(userAuth => {\r\n            unsubscribe();\r\n            resolve(userAuth);\r\n        },reject)\r\n    });\r\n}\r\n\r\nexport const createProfile = async (userauth,AddData) => {\r\n    if(!userauth) return;\r\n    const userRef= firestore.doc(`users/${userauth.uid}`);\r\n    const snap=await userRef.get();\r\n    if(!snap.exists){\r\n        const {displayName,email}= userauth;\r\n        try {\r\n            await userRef.set({\r\n                displayName,\r\n                email,\r\n                ...AddData\r\n            });\r\n        }\r\n        catch(error){\r\n            alert(\"Sorry\");\r\n        }\r\n    }\r\n    return userRef;\r\n};\r\n\r\nexport const addCollectionsAndDocs = async (collName,objectToAdd) => {\r\n    const collRef=firestore.collection(collName);\r\n    const batch=firestore.batch();\r\n    objectToAdd.forEach(obj => {\r\n        const newDocRef=collRef.doc();\r\n        batch.set(newDocRef,obj);\r\n    });\r\n    return await batch.commit();\r\n};\r\n\r\nexport const CollectionSnapToMap = collections => {\r\n    const transformedColl = collections.docs.map(\r\n        doc=> {\r\n            const {title,items}= doc.data();\r\n            return {\r\n                routeName: encodeURI(title.toLowerCase()),\r\n                id:doc.id,\r\n                title,items\r\n            };\r\n        }\r\n    );\r\n\r\n    return transformedColl.reduce((acc,coll) => {acc[coll.title.toLowerCase()]=coll; return acc},{});\r\n}\r\n\r\nexport default firebase;"]},"metadata":{},"sourceType":"module"}