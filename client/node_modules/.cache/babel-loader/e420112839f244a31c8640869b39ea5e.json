{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Manas\\\\Desktop\\\\Btech\\\\web pr\\\\shopnrock\\\\client\\\\src\\\\components\\\\SignUp\\\\signup.component.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './signup.styles.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/forminput.component';\nimport DButton from '../DButton/dbutton.component';\nimport { signUpStart } from '../../Redux/UserReducer/user.actions';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  _s();\n\n  const [user, setUser] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmpassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmpassword\n  } = user;\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUser({ ...user,\n      [name]: value\n    });\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmpassword) {\n      return;\n    }\n\n    signUpStart(email, password, displayName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sign-up\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"title\",\n      children: \"Sign Up for our Shop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"displayName\",\n        value: displayName,\n        label: \"Name\",\n        onChange: handleChange,\n        type: \"text\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"email\",\n        value: email,\n        label: \"Email Id\",\n        onChange: handleChange,\n        type: \"email\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"password\",\n        value: password,\n        label: \"Password\",\n        onChange: handleChange,\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n        name: \"confirmpassword\",\n        value: confirmpassword,\n        label: \"Confirm Password\",\n        onChange: handleChange,\n        type: \"password\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DButton, {\n        type: \"submit\",\n        children: \"Sign Up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 13\n  }, this);\n};\n\n_s(SignUp, \"9mTaylChRivHV5s4WccvEcvQs+I=\");\n\n_c = SignUp;\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: (email, password, displayName) => dispatch(signUpStart({\n    email,\n    password,\n    displayName\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"sources":["C:/Users/Manas/Desktop/Btech/web pr/shopnrock/client/src/components/SignUp/signup.component.jsx"],"names":["React","useState","connect","FormInput","DButton","signUpStart","SignUp","user","setUser","displayName","email","password","confirmpassword","handleChange","event","name","value","target","handleSubmit","preventDefault","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport './signup.styles.scss';\r\nimport {connect} from 'react-redux';\r\n\r\nimport FormInput from '../FormInput/forminput.component';\r\nimport DButton from '../DButton/dbutton.component';\r\nimport {signUpStart} from '../../Redux/UserReducer/user.actions';\r\nconst SignUp = ({signUpStart}) => {\r\n   const [user,setUser]=useState({displayName:'',email:'',password:'',confirmpassword:''});\r\n   const {displayName,email,password,confirmpassword}=user;\r\n   const handleChange = (event) => {\r\n        const {name,value}=event.target;\r\n        setUser({...user,[name]:value});\r\n    }\r\n   const handleSubmit = async event => {\r\n        event.preventDefault();\r\n        \r\n        if(password!==confirmpassword){\r\n            return;\r\n        }\r\n       \r\n       signUpStart(email,password,displayName);\r\n\r\n    }\r\n\r\n    \r\n        return(\r\n            <div className='sign-up'>\r\n                <h2 className='title'>Sign Up for our Shop</h2>\r\n                <form onSubmit={handleSubmit}>\r\n                <FormInput name='displayName' value={displayName} label='Name' onChange={handleChange} type='text' required></FormInput>\r\n                <FormInput name='email' value={email} label='Email Id' onChange={handleChange} type='email' required></FormInput>\r\n                <FormInput name='password' value={password} label='Password' onChange={handleChange} type='password' required></FormInput>\r\n                <FormInput name='confirmpassword' value={confirmpassword} label='Confirm Password' onChange={handleChange} type='password' required></FormInput>\r\n               \r\n               <DButton type='submit'>Sign Up</DButton>\r\n                </form>\r\n              \r\n            </div>\r\n        )\r\n    \r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    signUpStart : (email,password,displayName) => dispatch(signUpStart({email,password,displayName}))\r\n});\r\n export default connect(null,mapDispatchToProps)(SignUp);"]},"metadata":{},"sourceType":"module"}